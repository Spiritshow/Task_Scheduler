{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vkozy\\\\Desktop\\\\soft\\\\Esoft\\\\Project ToDoList\\\\front-end\\\\src\\\\components\\\\Pages\\\\Today\\\\components\\\\Task\\\\Task.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Subtask from \"../Subtask/SubTask\";\nimport \"./Task.css\";\nimport imgFold from \"../img/Fold (1).png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Task = ({\n  prop\n}) => {\n  _s();\n  const [status, setStatus] = useState(\"yellowStatusTask\");\n  const [targ, setTarg] = useState(false);\n  const handleFold = () => {\n    if (targ) setTarg(false);else setTarg(true);\n    prop.status = DefinitionStatus(prop.subtasks);\n    editStatusTask(prop.status);\n  };\n  let sb = prop.subtasks[0];\n  useEffect(() => {\n    prop.status = DefinitionStatus(prop.subtasks);\n    editStatusTask(prop.status);\n  }, [prop, sb]);\n  const editStatusTask = status => {\n    switch (status) {\n      case \"green\":\n        setStatus(\"greenStatusTask\");\n        break;\n      case \"red\":\n        setStatus(\"redStatusTask\");\n        break;\n      default:\n        setStatus(\"yellowStatusTask\");\n        break;\n    }\n  };\n  const DefinitionStatus = subtasks => {\n    const allTrue = subtasks.every(subtask => subtask.status === true);\n    console.log(subtasks);\n    console.log(allTrue);\n    return allTrue ? \"green\" : \"yellow\";\n  };\n  const listSubtask = subtasks => {\n    if (!!subtasks) return subtasks.map(subtask => /*#__PURE__*/_jsxDEV(Subtask, {\n      prop: subtask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this));else return /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 16\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ComponentTask\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TitleTask\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ButtonFold\",\n        onClick: handleFold,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imgFold,\n          className: \"ImageFold\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 69\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"NameTaskdiv\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"NameTask\",\n          children: prop.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"DayCreateTaskdiv\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"DayCreateTask\",\n          children: prop.dayCreate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Projectdiv\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"Project\",\n          children: prop.project\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Deadlinediv\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"Deadline\",\n          children: prop.deadline\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), targ && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SubtaskLisk\",\n      children: listSubtask(prop.subtasks)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(Task, \"zVsh6hj/nLJ89jQUhycc0gGibIQ=\");\n_c = Task;\nexport default Task;\nvar _c;\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"names":["React","useEffect","useState","Subtask","imgFold","jsxDEV","_jsxDEV","Task","prop","_s","status","setStatus","targ","setTarg","handleFold","DefinitionStatus","subtasks","editStatusTask","sb","allTrue","every","subtask","console","log","listSubtask","map","fileName","_jsxFileName","lineNumber","columnNumber","children","className","onClick","src","name","dayCreate","project","deadline","_c","$RefreshReg$"],"sources":["C:/Users/vkozy/Desktop/soft/Esoft/Project ToDoList/front-end/src/components/Pages/Today/components/Task/Task.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Subtask from \"../Subtask/SubTask\";\r\nimport \"./Task.css\"\r\nimport imgFold from \"../img/Fold (1).png\"\r\n\r\nconst Task = ({prop}) => {\r\n\r\n    const [status, setStatus] = useState(\"yellowStatusTask\");\r\n    const [targ, setTarg] = useState(false);\r\n\r\n    const handleFold = () => {\r\n        if (targ) \r\n            setTarg(false);\r\n        else \r\n            setTarg(true);\r\n\r\n        prop.status = DefinitionStatus(prop.subtasks);\r\n        editStatusTask(prop.status);\r\n    }\r\n    \r\n    let sb = prop.subtasks[0];\r\n\r\n    useEffect(() => {\r\n        prop.status = DefinitionStatus(prop.subtasks);\r\n        editStatusTask(prop.status);\r\n    }, [prop, sb])\r\n\r\n    const editStatusTask = (status) => {\r\n        switch (status) {\r\n            case \"green\":\r\n                setStatus(\"greenStatusTask\");\r\n                break;\r\n            case \"red\":\r\n                setStatus(\"redStatusTask\");\r\n                break;\r\n            default:\r\n                setStatus(\"yellowStatusTask\");\r\n                break;\r\n        }\r\n    }\r\n\r\n    const DefinitionStatus = (subtasks) => {\r\n        const allTrue = subtasks.every(subtask => subtask.status === true);\r\n        console.log(subtasks);\r\n        console.log(allTrue);\r\n        return allTrue ? \"green\" : \"yellow\";\r\n    }\r\n\r\n    const listSubtask = (subtasks) => {\r\n        if(!!subtasks)\r\n        return(subtasks.map(subtask =>(\r\n            <Subtask prop={subtask}/>)))\r\n        else \r\n        return(<h4>Загрузка...</h4>)\r\n    }\r\n\r\n    return(\r\n        <div className=\"ComponentTask\">\r\n            <div className=\"TitleTask\">\r\n                <button className=\"ButtonFold\" onClick={handleFold}><img src={imgFold} className=\"ImageFold\"/></button>\r\n                <div className=\"NameTaskdiv\">\r\n                    <h4 className=\"NameTask\">{prop.name}</h4>\r\n                </div>\r\n                <div className=\"DayCreateTaskdiv\">\r\n                    <h4 className=\"DayCreateTask\">{prop.dayCreate}</h4>\r\n                </div>\r\n                <div className=\"Projectdiv\">\r\n                    <h4 className=\"Project\">{prop.project}</h4>\r\n                </div>\r\n                <div className=\"Deadlinediv\">\r\n                    <h4 className=\"Deadline\">{prop.deadline}</h4>\r\n                </div>\r\n                <div className={status}></div>\r\n            </div>\r\n            {targ && <div className=\"SubtaskLisk\">\r\n                {listSubtask(prop.subtasks)}\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}